// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/Capstone-Kel-23/BE-Rest-API/domain"
	mock "github.com/stretchr/testify/mock"
)

// RoleRepository is an autogenerated mock type for the RoleRepository type
type RoleRepository struct {
	mock.Mock
}

// FindByName provides a mock function with given fields: name
func (_m *RoleRepository) FindByName(name string) (*domain.Role, error) {
	ret := _m.Called(name)

	var r0 *domain.Role
	if rf, ok := ret.Get(0).(func(string) *domain.Role); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Role)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRoleRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewRoleRepository creates a new instance of RoleRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRoleRepository(t mockConstructorTestingTNewRoleRepository) *RoleRepository {
	mock := &RoleRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
